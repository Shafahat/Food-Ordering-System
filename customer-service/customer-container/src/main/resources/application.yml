server:
  port: 3231

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=customer&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
    username: root
    password: root
    driver-class-name: org.postgresql.Driver
  #    hikari:
  #      maximum-pool-size: 25
  jpa:
    open-in-view: false
    #    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    #    generate-ddl: true
    #    hibernate:
    #      ddl-auto: update
    properties:
      hibernate:
  #        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  #        generate_statistics: true
  #        format_sql: true
  sql:
    init:
      mode: always
      schema-locations: classpath:init-schema.sql
      #      data-locations: classpath:init-data.sql
      platform: postgres

customer-service:
  customer-topic-name: customer
  outbox-scheduler-fixed-rate: 10000
  outbox-scheduler-initial-delay: 10000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5